Instead of replicating the Weatherpy solution that Trilogy promotes for this homework assignment, I decided to show the comparison between their solution to the problem and my solution to the problem.  I will demonstrate my understanding of the required web skills at the same time.  This may make it more challenging for the grader, but hopefully the content will be worth the effort.  
First, the databases.  One of the main goals of the Weatherpy assignment is to use an established API.   The API, ‘api.openweathermap.org’ is the one selected for the Weatherpy assignment.  OpenWeather is a commercial weather data management company that provides access to weather data of all sorts.  The second source of data recommended to use is the ciyipy library, that has a github pip install.  This was selected because it has a function which finds the nearest city in its database (Maxmind): www.maxmind.com/en/free-world-cities-database)  to a geographical coordinate.
The weatherpy homework suggest randomizing lats and longs and then using those lats and longs to feed the citypy function to return a city name, which we would then use to find a city in the openweathermap API to retrieve the weather data.  There are all kinds of issues with this approach to getting the weather data.   First, the list of cities in citipy are not coherent with the list of cities in openweather.  There are spelling differences, for example, and two entirely different lists.  Second, the provided lat-long randomizer randomizes the wrong thing, and then uses the wrong process.  The idea of using citipy to find the nearest city from a lat and long is great if I am looking for the nearest restaurant.  Using it to find the nearest city so we can ascertain measurements for our lat and long is just wrong.  If we had extremely fine granularity in our measurement system, such exists in a city itself, this would be just fine, but we are talking about the world.  Seventy percent of the world is covered by water which means that 70% of the world has no measurement stations in openweatherorg.  What happens  with Trilogy’s solution is that 70% of our randomly selected points are in the oceans of the world, and the nearest cities are all coastal cities, not to mention that the nearest city to a point in the ocean could be thousands of miles north or south.
A better approach to this problem is the one I did in the weatherpy homework, and I will demonstrate the differences in this web assignment.  First, I recognized that a coherent database of cities for the openweathermap API is provided in their bulk data.  They maintain a list of all the weather stations, approximately 23000, that are queried every few minutes.  I downloaded this database and use it to randomly select the cities using the ‘df.sample(number)’ function provided by Pandas.   Now, I have a list of measurements that are consistent with their actual location on Earth.  I also have a coherent list of cities with a 99.2% find rate, so my efficiency improves greatly.  I think the citipi has about 1600 cities and find rate was atrocious.



